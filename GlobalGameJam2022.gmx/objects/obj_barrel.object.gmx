<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_barrel</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 200;
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_ellipse_color(x - size / 2 - view_xview + 50, y - size / 2 - view_yview  + 50, x + size / 2 - view_xview, y + size / 2 - view_yview, c_white, c_black, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -1001;

var cakethickness = 1;
var xoffset = 10;
var yoffset = 2;


//wall

var topleftx1 = x + 10
var toplefty1 = y + 15 - 30
//x 10
//y 15

//top right 1
var toprightx1 = x + 30 + 5
var toprighty1 = y + 5 - 15  - 30
//x 30
//y 5

//bot left 1
var botleftx1 = x + 10
var botlefty1 = y + 45 
//x 10
//y 45

//bot right 1
var botrightx1 = x + 30 + 5
var botrighty1 = y + 35    - 15
//x 30
//y 35



//1
//top left to top right
draw_line_width_colour(topleftx1, toplefty1, toprightx1, toprighty1, cakethickness, c_white, c_white);

//bot left to bot right
draw_line_width_colour(botleftx1, botlefty1, botrightx1, botrighty1, cakethickness, c_white, c_white);

//top left to bot left
draw_line_width_colour(topleftx1, toplefty1, botleftx1, botlefty1, cakethickness, c_white, c_white);

//top right to bot right
draw_line_width_colour(toprightx1, toprighty1, botrightx1, botrighty1, cakethickness, c_white, c_white);



//2
//top left to top right
draw_line_width_colour(topleftx1 + xoffset, toplefty1 + yoffset, toprightx1 + xoffset, toprighty1 + yoffset, cakethickness, c_white, c_white);

//bot left to bot right
draw_line_width_colour(botleftx1 + xoffset, botlefty1 + yoffset, botrightx1 + xoffset, botrighty1 + yoffset, cakethickness, c_white, c_white);

//top left to bot left
draw_line_width_colour(topleftx1 + xoffset, toplefty1 + yoffset, botleftx1 + xoffset, botlefty1 + yoffset, cakethickness, c_white, c_white);

//top right to bot right
draw_line_width_colour(toprightx1 + xoffset, toprighty1 + yoffset, botrightx1 + xoffset, botrighty1 + yoffset, cakethickness, c_white, c_white);



/*
//top left to top right
draw_line_width_colour(x + 10 + xoffset, y + 15 + yoffset, x + 30 + xoffset, y + 5 + yoffset, cakethickness, c_white, c_white);

//bot left to bot right
draw_line_width_colour(x + 10 + xoffset, y + 45 + yoffset, x + 30 + xoffset, y + 35 + yoffset, cakethickness, c_white, c_white);

//top left to bot left
draw_line_width_colour(x + 10 + xoffset, y + 15 + yoffset, x + 10 + xoffset, y + 45 + yoffset, cakethickness, c_white, c_white);

//top right to bot right
draw_line_width_colour(x + 30 + xoffset, y + 5 + yoffset, x + 30 + xoffset, y + 35 + yoffset, cakethickness, c_white, c_white);
*/





//3
//top left 1 &amp; 2 
draw_line_width_colour(topleftx1, toplefty1, topleftx1 + xoffset, toplefty1 + yoffset, cakethickness, c_white, c_white);
//top right 1 &amp; 2
draw_line_width_colour(toprightx1, toprighty1, toprightx1 + xoffset, toprighty1 + yoffset, cakethickness, c_white, c_white);
//bot left 1 &amp; 2
draw_line_width_colour(botleftx1, botlefty1, botleftx1 + xoffset, botlefty1 + yoffset, cakethickness, c_white, c_white);
//bot right 1 &amp; 2
draw_line_width_colour(botrightx1, botrighty1, botrightx1 + xoffset, botrighty1 + yoffset, cakethickness, c_white, c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

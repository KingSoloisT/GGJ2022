<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_narrative();

spdx = 50;
spdy= 50;
escape = false;
text = ' ';
//Look at me im detecting stuff!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = ' ';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//movement 

if keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord('W')) 
{
   if place_free(x,y-spdy) {y -= spdy;}
}

if keyboard_check_pressed(vk_down) || keyboard_check_pressed(ord('S'))
{
   if place_free(x,y+spdy) {y += spdy;}
}


if keyboard_check_pressed(vk_left) || keyboard_check_pressed(ord('A'))
{
    if place_free(x-spdx,y) {x -= spdx;}
}

if keyboard_check_pressed(vk_right) || keyboard_check_pressed(ord('D'))
{
    if place_free(x+spdx,y) {x += spdx;}
}

x=clamp(x,0,room_width-sprite_width);
y=clamp(y,150,room_height-sprite_height-50);

//interactions

if place_meeting(x,y,obj_enemy)
{
    room_restart();
}

if place_meeting(x,y,obj_gate) &amp;&amp; escape = true
{
    room_goto_next();
}

if !text = ' '
{
    if alarm[0] &lt;= -1 {alarm[0] = 30*5}
}

if place_meeting(x,y,obj_pickup)
{
    escape = true;
    instance_destroy(obj_pickup);
    
    if room = rm_level1
    {
    text = photonar1;
    }
    
    if room = rm_level2
    {
    text = photonar2;
    }
    
    if room = rm_level3
    {
    text = photonar3;
    }
    
    if room = rm_level4
    {
    text = photonar4;
    }
    
    if room = rm_level5
    {
    text = photonar5;
    }
    
    if room = rm_level6
    {
    text = photonar6;
    }
    
    if room = rm_level7
    {
    text = photonar7;
    }
    
    if room = rm_level8
    {
    text = photonar8;
    }
    
    if room = rm_level9
    {
    text = photonar9;
    }
    
    if room = rm_level10
    {
    text = photonar10;
    }
    
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();
draw_set_font(fnt_test);
draw_set_halign(fa_center);
//test text
draw_text(400,420,text);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_triangle_colour(x-0,y-0,x+0,y+50, x+50, y+25, c_white, c_white, c_white, false);
draw_triangle_colour(x+5,y+5,x+5,y+45, x+50, y+25, c_black, c_black, c_black, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

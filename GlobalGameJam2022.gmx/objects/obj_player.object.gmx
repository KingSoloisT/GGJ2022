<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_narrative();
spdx = 50;
spdy= 50;
escape = false;
text = ' ';
//Look at me im detecting stuff!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//text = ' ';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 200;
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_ellipse_color(x - size / 2 - view_xview + 50, y - size / 2 - view_yview  + 50, x + size / 2 - view_xview, y + size / 2 - view_yview, c_white, c_black, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pausemenu
global.rm = room;

if keyboard_check_pressed(vk_escape)
{
    room_goto(rm_pause)
}

//movement 

if keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord('W')) 
{
   global.steps +=1;
   audio_play_sound(snd_step,1,false);
   if place_free(x,y-spdy) {y -= spdy;}
}

if keyboard_check_pressed(vk_down) || keyboard_check_pressed(ord('S'))
{
    global.steps +=1;
    audio_play_sound(snd_step,1,false);
   if place_free(x,y+spdy) {y += spdy;}
}


if keyboard_check_pressed(vk_left) || keyboard_check_pressed(ord('A'))
{
    global.steps +=1;
    audio_play_sound(snd_step,1,false);
    if place_free(x-spdx,y) {x -= spdx;}
}

if keyboard_check_pressed(vk_right) || keyboard_check_pressed(ord('D'))
{
    global.steps +=1;
    audio_play_sound(snd_step,1,false);    
    if place_free(x+spdx,y) {x += spdx;}
}

x=clamp(x,50,room_width-sprite_width-50);
y=clamp(y,150,room_height-sprite_height-50);

//interactions

if place_meeting(x,y,obj_enemy)
{
    audio_play_sound(snd_crash0,1,false); 
    room_restart();
}

if place_meeting(x,y,obj_gate) &amp;&amp; escape = true
{
    audio_play_sound(sng_door1,1,false);     
    room_goto_next();
}

if !text = ' '
{
    if alarm[0] &lt;= -1 {alarm[0] = 30*5}
}

if place_meeting(x,y,obj_pickup)
{
    audio_play_sound(snd_item,1,false); 
    escape = true;
    instance_destroy(obj_pickup);
    
    if (room = rm_level1)
    {
    if !audio_is_playing(snd_pic1) {audio_play_sound(snd_pic1,1,false);}
    text = photonar1;
    }
    if room = rm_level2
    {
    if !audio_is_playing(snd_pic2) {audio_play_sound(snd_pic2,1,false);}
    text = photonar2;
    }
    
    if room = rm_level3
    {
    if !audio_is_playing(snd_pic3) {audio_play_sound(snd_pic3,1,false);}
    text = photonar3;
    }
    
    if room = rm_level4
    {
    if !audio_is_playing(snd_pic4) {audio_play_sound(snd_pic4,1,false);}
    text = photonar4;
    }
    
    if room = rm_level5
    {
    if !audio_is_playing(snd_pic5) {audio_play_sound(snd_pic5,1,false);}
    text = photonar5;
    }
    
    if room = rm_level6
    {
    if !audio_is_playing(snd_pic6) {audio_play_sound(snd_pic6,1,false);}
    text = photonar6;
    }
    
    if room = rm_level7
    {
    if !audio_is_playing(snd_pic7) {audio_play_sound(snd_pic7,1,false);}
    text = photonar7;
    }
    
    if room = rm_level8
    {
    if !audio_is_playing(snd_pic8) {audio_play_sound(snd_pic8,1,false);}
    text = photonar8;
    }
    
    if room = rm_level9
    {
    if !audio_is_playing(snd_pic9) {audio_play_sound(snd_pic9,1,false);}
    text = photonar9;
    }
    
    if room = rm_level10
    {
    if !audio_is_playing(snd_pic10) {audio_play_sound(snd_pic10,1,false);}
    text = photonar10;
    }
    
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();
draw_set_font(fnt_test);
draw_set_halign(fa_center);
//test text
draw_text(400,25,text);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 0;

//background color white.
draw_rectangle_colour   (x+8,    y-3,   x +50,   y+52,                   c_black, c_black, c_black, c_black, false);
draw_rectangle_colour   (x+8,    y-3,   x +50,   y+52,                   c_white, c_white, c_white, c_white, true);

//hat
draw_line_width_colour  (x+27,      y+0,    x+38,   y+2,        1,                  c_white, c_white);
draw_line_width_colour  (x+31,      y-1,    x+35,   y+0,        5,                  c_white, c_white);

//head
draw_circle_colour      (x+32,      y+3,    3,                                      c_white, c_white, false);

//upper body
draw_line_width_colour  (x+32,      y+5,    x+20,   y+25,       10,                 c_white, c_white);
draw_rectangle_colour   (x+17.5,    y+20,   x+25,   y+35,                           c_white, c_white, c_white, c_white, false);

//lower body
draw_triangle_colour    (x+10,      y+40,   x+35,   y+40,   x+27,   y+25,           c_white, c_white, c_white, false);

//left arm
draw_line_width_colour  (x+27,      y+26,   x+13,   y+9,        4,                  c_white, c_white);
draw_line_width_colour  (x+13,      y+9,    x+28,   y+5,        4,                  c_white, c_white);

//right arm
draw_line_width_colour  (x+30,      y+5,    x+35,   y+23,       4,                  c_white, c_white);
draw_line_width_colour  (x+34,      y+23,   x+43,   y+21,       4,                  c_white, c_white);
draw_circle_colour      (x+45,      y+20,                       2,                  c_white, c_white, false);

//left leg
draw_line_width_colour  (x+20,      y+38,   x+12,   y+47,       5,                  c_white, c_white);

//right leg
draw_line_width_colour  (x+26,      y+38,   x+27,   y+47,       5,                  c_white, c_white);

//right shoe
draw_triangle_colour    (x+23,      y+44,   x+26,   y+50,   x+33,   y+50,           c_white, c_white, c_white, false);

//left shoe
draw_triangle_colour    (x+11,      y+47,   x+10,   y+50,   x+17,   y+51,           c_white, c_white, c_white, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
